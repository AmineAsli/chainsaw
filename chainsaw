#!/bin/bash
#
# A simple shell script that works in conjunction with iptables to help you fighting DDoS attacks. 
#
# Author : Amine Asli <asli.amine@gmail.com>
#
# Usage :
#       chainsaw [option] 
#   

VERSION=0.1
PROGRAM=$(basename $0)
IPT=/sbin/iptables
MAX_CONNECTIONS=100
BAN_EXPIRATION=60
LOGDIR=/var/log/chainsaw

ban_ip()
{
   $IPT -I INPUT -s $1 -j DROP && \
   { echo "$IPT -D INPUT -s $1 -j DROP" | at now + $BAN_EXPIRATION minute; } > /dev/null 2>&1
}

error()
{
   echo "$@" 1>&2
   usage_and_exit 1
}

log_ban()
{
   echo "$1 Ban IP [$2]" >> "${LOGDIR}/chainsaw.log"
}

usage( )
{
   cat <<EOF
Usage:
   $PROGRAM [ ? ]
      [ -c digit ]  (Block any IP that has total connections exceeding 'digit')
      [ -e minutes ] (Specify how much time in minutes the offending IP should be blocked)
      [ -l dir ]     (Change the default location of the log directory)
      [ -v ]         (Pring the version number)
      [ -h ]         (Show this current help)
       
EOF
}

usage_and_exit( )
{
   usage
   exit $1
}

version( )
{
   echo "$PROGRAM version $VERSION"
}

while getopts ":hvc:e:l:" opt; do
   case $opt in 
      h  ) 
           usage_and_exit 0
           ;;
      v  ) 
           version
           exit 0
           ;;
      c  )
           MAX_CONNECTIONS="$OPTARG"
           ;;
      e  ) 
           BAN_EXPIRATION="$OPTARG"
           ;;
      l  ) 
           LOGDIR="$OPTARG"
           ;;
      \? )
           error "Unrecognized option : $OPTARG"
           ;;
    esac
done

test -d "$LOGDIR" || mkdir -p "$LOGDIR" 2> /dev/null

IFS=$'\n'

for line in $(netstat -ntu | 
                 awk '{ print $5}'                         | 
                    cut -d : -f1                           | 
                       sed -e '/^[[:alpha:]]/d' -e '/^$/d' |	#Remove netsat column titles and empty lines
                          sort                             | 
                             uniq -c                       | 	
                                sed -e 's/^[ \t]*//')           #Remove leading spaces
do

   total_connections=$(echo $line | cut -d ' ' -f1)
   ip=$(echo $line | cut -d ' ' -f2) 
   
   if [ "$total_connections" -lt "$MAX_CONNECTIONS" ]
   then
       break
   fi
   
   ban_ip $ip
   log_ban $(date) $ip
   
done 

exit 0
